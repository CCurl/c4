: ->file ( fh-- ) (output-fp) ! ;  : ->stdout 0 ->file ;
: write-row  p1 i 0 >pos s-cpy sz-rtrim ztype 10 emit ;
: write-block rows for write-row next ;
: save-block  dirty? 0= if exit then
    block-fn fopen-wb ?dup
    if >t t@ ->file write-block t> fclose clean ->stdout then ;
: bs 8 emit ;
: del-ch d> c@ if d> c-- 0 x>- 1- c! bs space bs then ;
: app-ch ( ch-- ) x>+ w!  d> c++  a> emit ;
: clr-buf d> >x 0 x>+ w! ;
: accept ( str-- ) +regs >d clr-buf
  begin
    key >a
    a> 13 =  if -exit then
    a> 27 =  a>   3 =  or  if clr-buf -exit then
    a>  8 =  a> 127 =  or  if del-ch then
    a> printable? if app-ch then
  again ;
: ?quit dirty? if ." (use q! to quit without saving)" else quit! then ;
: do-cmd ->cmd ':' emit clr-eol cur-on
    p1 accept ->cmd clr-eol
    p1 s" q"  s-eq if  ?quit exit  then
    p1 s" q!" s-eq if  quit! exit  then
    p1 s" wq" s-eq if  save-block quit!  exit   then
    p1 s" w"  s-eq if  save-block clean  exit   then
    p1 s" rl" s-eq if  ed-load then ;
: yank-line   p2 row 0 >pos  s-cpy drop ;
: put-line    insert-line  row 0 >pos p2 s-cpy drop dirty ;




