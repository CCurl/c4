here
: test-if 'N' swap if drop 'Y' then emit '.' emit ;
here swap do i @C . loop cr
0 test-if 1 test-if

: dup. dup . ;
cr 60 50 do I . loop 
cr 10 begin dup. 1- dup      while drop
cr  0 begin dup. 1+ dup 10 = until drop

: .code HERE 0 do I (.) ':' EMIT SPACE I @C . CR loop ;
: elapsed timer swap - ."  (" . ." usec)" ;
: mil 1000 dup * * ;
: T0 a drop ;
: T1 T0 ;
: fib 1- dup 2 < if drop 1 exit then dup fib swap 1- fib + ;
: bm1 cr ." bm1: empty loop: "  timer swap 0 do loop elapsed ;
: bm2 cr ." bm2: call loop: "   timer swap 0 do T0 loop elapsed ;
: bm3 cr ." bm3: 2 call loop: " timer swap 0 do T1 loop elapsed ;
: bm4 cr ." bm4: fib " dup.     timer swap fib . elapsed ;
: go  500 mil bm1  100 mil bm2  100 mil bm3  37 bm4 cr ;
go cr
words cr cr
var xxx
12345 xxx ! xxx @
const yyy
xxx @ yyy =  IF ." PASS: const/var." THEN
xxx @ yyy = 0= IF ." FAIL: const/var!" THEN
